# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = /etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/sword
pkglibdir = $(libdir)/sword
pkgincludedir = $(includedir)/sword
top_builddir = ..

ACLOCAL = ${SHELL} /space/home/scribe/src/sword/missing --run aclocal
AUTOCONF = ${SHELL} /space/home/scribe/src/sword/missing --run autoconf
AUTOMAKE = ${SHELL} /space/home/scribe/src/sword/missing --run automake
AUTOHEADER = ${SHELL} /space/home/scribe/src/sword/missing --run autoheader

INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i686-pc-linux-gnu
AMTAR = ${SHELL} /space/home/scribe/src/sword/missing --run tar
AS = as
AWK = gawk
CC = gcc
CXX = g++
DEPDIR = .deps
DLLTOOL = dlltool
ECHO = echo
EXEEXT = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
MAINT = #
OBJDUMP = objdump
OBJEXT = o
PACKAGE = sword
RANLIB = ranlib
STRIP = strip
VERSION = 1.5.3
am__include = include
am__quote = 
dir_confdef = no
enable_debug = yes
enable_profile = no
enable_vcl = no
install_sh = /space/home/scribe/src/sword/install-sh
target_cpu = i686
target_mingw32 = no
target_os = linux-gnu
target_system = intel
target_vendor = pc
with_conf = no
with_icu = no
with_zlib = yes

AUTOMAKE_OPTIONS = 1.5
INCLUDES = -I $(top_srcdir)/include
LDADD = -L$(top_builddir)/lib -lsword 

noinst_PROGRAMS = cipherraw ciphertest ciphertest2 lexdump mkfastmod \
mod2vpl vpl2mod stepdump step2vpl mod2zmod modwrite addvs addld emptyvss \
txt2sword addgb imp2gbs imp2ld imp2vs thml2gbs\
$(ICUPROG)

#ICUPROG = normcode
ICUPROG = 

#normcode_SOURCES = normcode.cpp

cipherraw_SOURCES = cipherraw.cpp
ciphertest_SOURCES = ciphertest.cpp
ciphertest2_SOURCES = ciphertest2.cpp
lexdump_SOURCES = lexdump.c
lexdump_LDADD = -lstdc++
mkfastmod_SOURCES = mkfastmod.cpp
mod2vpl_SOURCES = mod2vpl.cpp
vpl2mod_SOURCES = vpl2mod.cpp
stepdump_SOURCES = stepdump.cpp
step2vpl_SOURCES = step2vpl.cpp
mod2zmod_SOURCES = mod2zmod.cpp
modwrite_SOURCES = modwrite.cpp
addvs_SOURCES = addvs.cpp
addld_SOURCES = addld.cpp
emptyvss_SOURCES = emptyvss.cpp
txt2sword_SOURCES = txt2sword.cpp
addgb_SOURCES = addgb.cpp
imp2gbs_SOURCES = imp2gbs.cpp
imp2ld_SOURCES = imp2ld.cpp
imp2vs_SOURCES = imp2vs.cpp
thml2gbs_SOURCES = thml2gbs.cpp
subdir = utilities
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
#noinst_PROGRAMS = cipherraw$(EXEEXT) ciphertest$(EXEEXT) \
#	ciphertest2$(EXEEXT) lexdump$(EXEEXT) \
#	mkfastmod$(EXEEXT) mod2vpl$(EXEEXT) vpl2mod$(EXEEXT) \
#	stepdump$(EXEEXT) step2vpl$(EXEEXT) mod2zmod$(EXEEXT) \
#	modwrite$(EXEEXT) addvs$(EXEEXT) addld$(EXEEXT) \
#	emptyvss$(EXEEXT) txt2sword$(EXEEXT) addgb$(EXEEXT) \
#	imp2gbs$(EXEEXT) imp2ld$(EXEEXT) imp2vs$(EXEEXT) \
#	thml2gbs$(EXEEXT) normcode$(EXEEXT)
noinst_PROGRAMS = cipherraw$(EXEEXT) ciphertest$(EXEEXT) \
	ciphertest2$(EXEEXT) lexdump$(EXEEXT) \
	mkfastmod$(EXEEXT) mod2vpl$(EXEEXT) vpl2mod$(EXEEXT) \
	stepdump$(EXEEXT) step2vpl$(EXEEXT) \
	mod2zmod$(EXEEXT) modwrite$(EXEEXT) addvs$(EXEEXT) \
	addld$(EXEEXT) emptyvss$(EXEEXT) txt2sword$(EXEEXT) \
	addgb$(EXEEXT) imp2gbs$(EXEEXT) imp2ld$(EXEEXT) \
	imp2vs$(EXEEXT) thml2gbs$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_addgb_OBJECTS = addgb.$(OBJEXT)
addgb_OBJECTS = $(am_addgb_OBJECTS)
addgb_LDADD = $(LDADD)
addgb_DEPENDENCIES =
addgb_LDFLAGS =
am_addld_OBJECTS = addld.$(OBJEXT)
addld_OBJECTS = $(am_addld_OBJECTS)
addld_LDADD = $(LDADD)
addld_DEPENDENCIES =
addld_LDFLAGS =
am_addvs_OBJECTS = addvs.$(OBJEXT)
addvs_OBJECTS = $(am_addvs_OBJECTS)
addvs_LDADD = $(LDADD)
addvs_DEPENDENCIES =
addvs_LDFLAGS =
am_cipherraw_OBJECTS = cipherraw.$(OBJEXT)
cipherraw_OBJECTS = $(am_cipherraw_OBJECTS)
cipherraw_LDADD = $(LDADD)
cipherraw_DEPENDENCIES =
cipherraw_LDFLAGS =
am_ciphertest_OBJECTS = ciphertest.$(OBJEXT)
ciphertest_OBJECTS = $(am_ciphertest_OBJECTS)
ciphertest_LDADD = $(LDADD)
ciphertest_DEPENDENCIES =
ciphertest_LDFLAGS =
am_ciphertest2_OBJECTS = ciphertest2.$(OBJEXT)
ciphertest2_OBJECTS = $(am_ciphertest2_OBJECTS)
ciphertest2_LDADD = $(LDADD)
ciphertest2_DEPENDENCIES =
ciphertest2_LDFLAGS =
am_emptyvss_OBJECTS = emptyvss.$(OBJEXT)
emptyvss_OBJECTS = $(am_emptyvss_OBJECTS)
emptyvss_LDADD = $(LDADD)
emptyvss_DEPENDENCIES =
emptyvss_LDFLAGS =
am_imp2gbs_OBJECTS = imp2gbs.$(OBJEXT)
imp2gbs_OBJECTS = $(am_imp2gbs_OBJECTS)
imp2gbs_LDADD = $(LDADD)
imp2gbs_DEPENDENCIES =
imp2gbs_LDFLAGS =
am_imp2ld_OBJECTS = imp2ld.$(OBJEXT)
imp2ld_OBJECTS = $(am_imp2ld_OBJECTS)
imp2ld_LDADD = $(LDADD)
imp2ld_DEPENDENCIES =
imp2ld_LDFLAGS =
am_imp2vs_OBJECTS = imp2vs.$(OBJEXT)
imp2vs_OBJECTS = $(am_imp2vs_OBJECTS)
imp2vs_LDADD = $(LDADD)
imp2vs_DEPENDENCIES =
imp2vs_LDFLAGS =
am_lexdump_OBJECTS = lexdump.$(OBJEXT)
lexdump_OBJECTS = $(am_lexdump_OBJECTS)
lexdump_DEPENDENCIES =
lexdump_LDFLAGS =
am_mkfastmod_OBJECTS = mkfastmod.$(OBJEXT)
mkfastmod_OBJECTS = $(am_mkfastmod_OBJECTS)
mkfastmod_LDADD = $(LDADD)
mkfastmod_DEPENDENCIES =
mkfastmod_LDFLAGS =
am_mod2vpl_OBJECTS = mod2vpl.$(OBJEXT)
mod2vpl_OBJECTS = $(am_mod2vpl_OBJECTS)
mod2vpl_LDADD = $(LDADD)
mod2vpl_DEPENDENCIES =
mod2vpl_LDFLAGS =
am_mod2zmod_OBJECTS = mod2zmod.$(OBJEXT)
mod2zmod_OBJECTS = $(am_mod2zmod_OBJECTS)
mod2zmod_LDADD = $(LDADD)
mod2zmod_DEPENDENCIES =
mod2zmod_LDFLAGS =
am_modwrite_OBJECTS = modwrite.$(OBJEXT)
modwrite_OBJECTS = $(am_modwrite_OBJECTS)
modwrite_LDADD = $(LDADD)
modwrite_DEPENDENCIES =
modwrite_LDFLAGS =
#am_normcode_OBJECTS = normcode.$(OBJEXT)
am_normcode_OBJECTS =
normcode_OBJECTS = $(am_normcode_OBJECTS)
normcode_LDADD = $(LDADD)
normcode_DEPENDENCIES =
normcode_LDFLAGS =
am_step2vpl_OBJECTS = step2vpl.$(OBJEXT)
step2vpl_OBJECTS = $(am_step2vpl_OBJECTS)
step2vpl_LDADD = $(LDADD)
step2vpl_DEPENDENCIES =
step2vpl_LDFLAGS =
am_stepdump_OBJECTS = stepdump.$(OBJEXT)
stepdump_OBJECTS = $(am_stepdump_OBJECTS)
stepdump_LDADD = $(LDADD)
stepdump_DEPENDENCIES =
stepdump_LDFLAGS =
am_thml2gbs_OBJECTS = thml2gbs.$(OBJEXT)
thml2gbs_OBJECTS = $(am_thml2gbs_OBJECTS)
thml2gbs_LDADD = $(LDADD)
thml2gbs_DEPENDENCIES =
thml2gbs_LDFLAGS =
am_txt2sword_OBJECTS = txt2sword.$(OBJEXT)
txt2sword_OBJECTS = $(am_txt2sword_OBJECTS)
txt2sword_LDADD = $(LDADD)
txt2sword_DEPENDENCIES =
txt2sword_LDFLAGS =
am_vpl2mod_OBJECTS = vpl2mod.$(OBJEXT)
vpl2mod_OBJECTS = $(am_vpl2mod_OBJECTS)
vpl2mod_LDADD = $(LDADD)
vpl2mod_DEPENDENCIES =
vpl2mod_LDFLAGS =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = 
LIBS = -lstdc++ -lz 
depcomp = $(SHELL) $(top_srcdir)/depcomp
DEP_FILES = $(DEPDIR)/addgb.Po $(DEPDIR)/addld.Po \
	$(DEPDIR)/addvs.Po $(DEPDIR)/cipherraw.Po \
	$(DEPDIR)/ciphertest.Po $(DEPDIR)/ciphertest2.Po \
	$(DEPDIR)/emptyvss.Po $(DEPDIR)/imp2gbs.Po \
	$(DEPDIR)/imp2ld.Po $(DEPDIR)/imp2vs.Po \
	$(DEPDIR)/lexdump.Po $(DEPDIR)/mkfastmod.Po \
	$(DEPDIR)/mod2vpl.Po $(DEPDIR)/mod2zmod.Po \
	$(DEPDIR)/modwrite.Po $(DEPDIR)/normcode.Po \
	$(DEPDIR)/step2vpl.Po $(DEPDIR)/stepdump.Po \
	$(DEPDIR)/thml2gbs.Po $(DEPDIR)/txt2sword.Po \
	$(DEPDIR)/vpl2mod.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O0 -Werror
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -g -O0 -Werror
DIST_SOURCES = $(addgb_SOURCES) $(addld_SOURCES) $(addvs_SOURCES) \
	$(cipherraw_SOURCES) $(ciphertest_SOURCES) \
	$(ciphertest2_SOURCES) $(emptyvss_SOURCES) $(imp2gbs_SOURCES) \
	$(imp2ld_SOURCES) $(imp2vs_SOURCES) $(lexdump_SOURCES) \
	$(mkfastmod_SOURCES) $(mod2vpl_SOURCES) $(mod2zmod_SOURCES) \
	$(modwrite_SOURCES) $(normcode_SOURCES) $(step2vpl_SOURCES) \
	$(stepdump_SOURCES) $(thml2gbs_SOURCES) $(txt2sword_SOURCES) \
	$(vpl2mod_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(addgb_SOURCES) $(addld_SOURCES) $(addvs_SOURCES) $(cipherraw_SOURCES) $(ciphertest_SOURCES) $(ciphertest2_SOURCES) $(emptyvss_SOURCES) $(imp2gbs_SOURCES) $(imp2ld_SOURCES) $(imp2vs_SOURCES) $(lexdump_SOURCES) $(mkfastmod_SOURCES) $(mod2vpl_SOURCES) $(mod2zmod_SOURCES) $(modwrite_SOURCES) $(normcode_SOURCES) $(step2vpl_SOURCES) $(stepdump_SOURCES) $(thml2gbs_SOURCES) $(txt2sword_SOURCES) $(vpl2mod_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  utilities/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
addgb$(EXEEXT): $(addgb_OBJECTS) $(addgb_DEPENDENCIES) 
	@rm -f addgb$(EXEEXT)
	$(CXXLINK) $(addgb_LDFLAGS) $(addgb_OBJECTS) $(addgb_LDADD) $(LIBS)
addld$(EXEEXT): $(addld_OBJECTS) $(addld_DEPENDENCIES) 
	@rm -f addld$(EXEEXT)
	$(CXXLINK) $(addld_LDFLAGS) $(addld_OBJECTS) $(addld_LDADD) $(LIBS)
addvs$(EXEEXT): $(addvs_OBJECTS) $(addvs_DEPENDENCIES) 
	@rm -f addvs$(EXEEXT)
	$(CXXLINK) $(addvs_LDFLAGS) $(addvs_OBJECTS) $(addvs_LDADD) $(LIBS)
cipherraw$(EXEEXT): $(cipherraw_OBJECTS) $(cipherraw_DEPENDENCIES) 
	@rm -f cipherraw$(EXEEXT)
	$(CXXLINK) $(cipherraw_LDFLAGS) $(cipherraw_OBJECTS) $(cipherraw_LDADD) $(LIBS)
ciphertest$(EXEEXT): $(ciphertest_OBJECTS) $(ciphertest_DEPENDENCIES) 
	@rm -f ciphertest$(EXEEXT)
	$(CXXLINK) $(ciphertest_LDFLAGS) $(ciphertest_OBJECTS) $(ciphertest_LDADD) $(LIBS)
ciphertest2$(EXEEXT): $(ciphertest2_OBJECTS) $(ciphertest2_DEPENDENCIES) 
	@rm -f ciphertest2$(EXEEXT)
	$(CXXLINK) $(ciphertest2_LDFLAGS) $(ciphertest2_OBJECTS) $(ciphertest2_LDADD) $(LIBS)
emptyvss$(EXEEXT): $(emptyvss_OBJECTS) $(emptyvss_DEPENDENCIES) 
	@rm -f emptyvss$(EXEEXT)
	$(CXXLINK) $(emptyvss_LDFLAGS) $(emptyvss_OBJECTS) $(emptyvss_LDADD) $(LIBS)
imp2gbs$(EXEEXT): $(imp2gbs_OBJECTS) $(imp2gbs_DEPENDENCIES) 
	@rm -f imp2gbs$(EXEEXT)
	$(CXXLINK) $(imp2gbs_LDFLAGS) $(imp2gbs_OBJECTS) $(imp2gbs_LDADD) $(LIBS)
imp2ld$(EXEEXT): $(imp2ld_OBJECTS) $(imp2ld_DEPENDENCIES) 
	@rm -f imp2ld$(EXEEXT)
	$(CXXLINK) $(imp2ld_LDFLAGS) $(imp2ld_OBJECTS) $(imp2ld_LDADD) $(LIBS)
imp2vs$(EXEEXT): $(imp2vs_OBJECTS) $(imp2vs_DEPENDENCIES) 
	@rm -f imp2vs$(EXEEXT)
	$(CXXLINK) $(imp2vs_LDFLAGS) $(imp2vs_OBJECTS) $(imp2vs_LDADD) $(LIBS)
lexdump$(EXEEXT): $(lexdump_OBJECTS) $(lexdump_DEPENDENCIES) 
	@rm -f lexdump$(EXEEXT)
	$(LINK) $(lexdump_LDFLAGS) $(lexdump_OBJECTS) $(lexdump_LDADD) $(LIBS)
mkfastmod$(EXEEXT): $(mkfastmod_OBJECTS) $(mkfastmod_DEPENDENCIES) 
	@rm -f mkfastmod$(EXEEXT)
	$(CXXLINK) $(mkfastmod_LDFLAGS) $(mkfastmod_OBJECTS) $(mkfastmod_LDADD) $(LIBS)
mod2vpl$(EXEEXT): $(mod2vpl_OBJECTS) $(mod2vpl_DEPENDENCIES) 
	@rm -f mod2vpl$(EXEEXT)
	$(CXXLINK) $(mod2vpl_LDFLAGS) $(mod2vpl_OBJECTS) $(mod2vpl_LDADD) $(LIBS)
mod2zmod$(EXEEXT): $(mod2zmod_OBJECTS) $(mod2zmod_DEPENDENCIES) 
	@rm -f mod2zmod$(EXEEXT)
	$(CXXLINK) $(mod2zmod_LDFLAGS) $(mod2zmod_OBJECTS) $(mod2zmod_LDADD) $(LIBS)
modwrite$(EXEEXT): $(modwrite_OBJECTS) $(modwrite_DEPENDENCIES) 
	@rm -f modwrite$(EXEEXT)
	$(CXXLINK) $(modwrite_LDFLAGS) $(modwrite_OBJECTS) $(modwrite_LDADD) $(LIBS)
normcode$(EXEEXT): $(normcode_OBJECTS) $(normcode_DEPENDENCIES) 
	@rm -f normcode$(EXEEXT)
	$(CXXLINK) $(normcode_LDFLAGS) $(normcode_OBJECTS) $(normcode_LDADD) $(LIBS)
step2vpl$(EXEEXT): $(step2vpl_OBJECTS) $(step2vpl_DEPENDENCIES) 
	@rm -f step2vpl$(EXEEXT)
	$(CXXLINK) $(step2vpl_LDFLAGS) $(step2vpl_OBJECTS) $(step2vpl_LDADD) $(LIBS)
stepdump$(EXEEXT): $(stepdump_OBJECTS) $(stepdump_DEPENDENCIES) 
	@rm -f stepdump$(EXEEXT)
	$(CXXLINK) $(stepdump_LDFLAGS) $(stepdump_OBJECTS) $(stepdump_LDADD) $(LIBS)
thml2gbs$(EXEEXT): $(thml2gbs_OBJECTS) $(thml2gbs_DEPENDENCIES) 
	@rm -f thml2gbs$(EXEEXT)
	$(CXXLINK) $(thml2gbs_LDFLAGS) $(thml2gbs_OBJECTS) $(thml2gbs_LDADD) $(LIBS)
txt2sword$(EXEEXT): $(txt2sword_OBJECTS) $(txt2sword_DEPENDENCIES) 
	@rm -f txt2sword$(EXEEXT)
	$(CXXLINK) $(txt2sword_LDFLAGS) $(txt2sword_OBJECTS) $(txt2sword_LDADD) $(LIBS)
vpl2mod$(EXEEXT): $(vpl2mod_OBJECTS) $(vpl2mod_DEPENDENCIES) 
	@rm -f vpl2mod$(EXEEXT)
	$(CXXLINK) $(vpl2mod_LDFLAGS) $(vpl2mod_OBJECTS) $(vpl2mod_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include $(DEPDIR)/addgb.Po
include $(DEPDIR)/addld.Po
include $(DEPDIR)/addvs.Po
include $(DEPDIR)/cipherraw.Po
include $(DEPDIR)/ciphertest.Po
include $(DEPDIR)/ciphertest2.Po
include $(DEPDIR)/emptyvss.Po
include $(DEPDIR)/imp2gbs.Po
include $(DEPDIR)/imp2ld.Po
include $(DEPDIR)/imp2vs.Po
include $(DEPDIR)/lexdump.Po
include $(DEPDIR)/mkfastmod.Po
include $(DEPDIR)/mod2vpl.Po
include $(DEPDIR)/mod2zmod.Po
include $(DEPDIR)/modwrite.Po
include $(DEPDIR)/normcode.Po
include $(DEPDIR)/step2vpl.Po
include $(DEPDIR)/stepdump.Po
include $(DEPDIR)/thml2gbs.Po
include $(DEPDIR)/txt2sword.Po
include $(DEPDIR)/vpl2mod.Po

distclean-depend:
	-rm -rf $(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f $< || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
CCDEPMODE = depmode=gcc3

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc3
uninstall-info-am:

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
