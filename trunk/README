Be sure to read INSTALL for information on how to get the software
built, configured, and running properly.
___________________________________________________________________
Get the latest source and info at:
	http://www.crosswire.org

UNIX developers	You can try a './configure' (or optionally './usrinst.sh'
		for normal user configure options), then 'make' from this directory.
		This should compile everthing needed.  You may type
		'./configure --help' to see a list of options.
		If all compiles file, a 'make install' (as root, probably) will
		install libs to your system and you may begin using the library.
		There are a few basic tests (sword/tests), utilities
		(sword/utilities), examples (sword/examples/*) and very basic apps
		(sword/apps), in the tree.  The apps each have their own make system,
		so look for a ./configure or a README.

		./testlib.cpp compiles to the executable 'testlib' as a test to
		see if the libs have compiled and can be linked against successfully.
		This is NOT the final target of the build, nor does anything useful.
			:)



Other language bindings can be found in the ./bindings directory:

Kylix bindings (and maybe Delphi bindings) may be found in sword/bindings/clx

C++Builder developers	You may find project files and source for the WIN32
		frontend under apps/windows/CBuilder5/BibleCS

Delphi developers	You will need to place sword32.dll in your winsys
		directory or elsewhere in your path.  You can find source in
		./apps/windoze/bcowl25/swordapi
		or binary at: ftp://crosswire.org/pub/sword/attic/dlls.tar.gz
		This is an older build and probably should be regenerated.
		If you wish to add components to your toolbar, install
		./apps/windoze/delphi20/swordvc/swmodule.pas and
		./apps/windoze/delphi20/swordvc/swvskey.pas

Enjoy!

Please email any questions or comments to: sword-feedback@crosswire.org

