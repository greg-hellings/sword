/******************************************************************************
 *	sword.idl	- This file contains a simple idl for accessing sword
 */

#ifndef SWORDORB_IDL
#define SWORDORB_IDL

module swordorb {

typedef sequence<string> StringList;

struct ModInfo {
	string name;
	string type;
	string lang;
};

typedef sequence<ModInfo> ModInfoList;
//-----------------------------------------------------------------
// SWModule methods

	enum SearchType {
		REGEX,
		PHRASE,
		MULTIWORD
	};


interface SWModule {
	void   terminateSearch();
	StringList search(in string istr, in SearchType searchType, in long flags, in string scope);
	char   error();
	long  getEntrySize();
	void   setKeyText(in string key);
	string getKeyText();
	string getName();
	string getDescription();
	string getType();
	void   previous();
	void   next();
	void   begin();
	string getStripText();
	string getRenderText();
	string getConfigEntry(in string key);
};

//-----------------------------------------------------------------
// modmap methods
//
/*
interface ModListIterator {
	boolean next();
	SWModule val();
};
*/

//-----------------------------------------------------------------
// SWMgr methods
//
interface SWMgr {
//	SWHANDLE SWDLLEXPORT SWMgr_new();
		// SWConfig *, SWConfig *, bool, SWFilterMgr *
//	SWHANDLE SWDLLEXPORT SWMgr_newEx(SWHANDLE hiconfig, SWHANDLE hisysconfig, char autoload, SWHANDLE hfilterMgr);
//	void     SWDLLEXPORT SWMgr_delete(SWHANDLE hmgr);

//	SWHANDLE SWDLLEXPORT SWMgr_getConfig(SWHANDLE hmgr);

//	ModListIterator getModListIterator();
	ModInfoList getModInfoList();
	SWModule getModuleByName(in string name);
	string getPrefixPath();
	string getConfigPath();
	void   setGlobalOption(in string option, in string value);
	string getGlobalOption(in string option);
	string getGlobalOptionTip(in string option);
	StringList getGlobalOptions();
	StringList getGlobalOptionValues(in string option);
	void     setCipherKey(in string modName, in string key);
	void     terminate();
	boolean testConnection();

};

};

#endif
